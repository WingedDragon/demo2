
#zk.connect=node61:2181,node62:2181,node63:2181
#zk.connect=node61:2181,node62:2181,node63:2181/kafka
zk.connect=10.10.106.109:2181,10.10.110.47:2181

#broker list
#bootstrap.servers=node61:9092,node62:9092,node63:9092
bootstrap.servers=10.10.106.109:9092,10.10.110.47:9092,10.10.112.147:9092

#��Ϣ���л� IntegerDeserializer
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#value.deserializer=com.bee.bigdata.kafka.serializable.kryo.DomainDecoding
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

## ��С��ȡ���ݴ�С
#fetch.min.bytes=1

#Ĭ��������
group.id=china

#ʹ��consumer group�������ʱ, ���consumer����ʱ�䳬ʱ
# ʱ�䷶Χ��broker�����group.min.session.timeout.ms(6000) < ? < group.max.session.timeout.ms(30,0000)
session.timeout.ms=100000

#consumer-kafka(broker controller)�������( <= 1/3 * session.timeout.ms)
#heartbeat.interval.ms=3000

#consumer ��ȡ�������ȴ�ʱ��(����Сfetch��¼�й�)
#fetch.max.wait.ms=500

#consumer��ȡ��Ϣ����С��С
#fetch.min.bytes=1

#ÿ�δ�kafka����ȡ����Ϣ���ߴ磨byte��,Ĭ��Ϊ50m (broker ��Ϣ���ߴ�message.max.bytes=1000012 10m, producer max.request.size=1048576 10m)
#fetch.max.bytes=52428800


# ÿ�δӵ�����������ȡ����Ϣ���ߴ磨byte����Ĭ��Ϊ1M (broker message.max.bytes=1000012 10m )
#max.partition.fetch.bytes=1048576

#ƫ���� [latest, earliest, none]
auto.offset.reset=latest

#�Զ��ύ
enable.auto.commit=true
auto.commit.interval.ms= 60000

#consumer �������ȡ��¼
#max.poll.interval.ms=300000

#consumer �����ȡ��¼����
#max.poll.records=500

#compression type=none, gzip, snappy, lz4, producer
#compression.type=snappy

#consumer ��ȡ��¼�����С(-1 osĬ��ֵ)��ͬproducer receive.buffer.bytes=32768
#receive.buffer.bytes=65536

#consumer �������ݵĻ����С(-1 osĬ��)��ͬproducerһ��
#send.buffer.bytes=131072

#brokerԪ���ݼ��ʱ��
#metadata.max.age.ms=300000

#consumer ��¼offset����Ƶ��
#reconnect.backoff.ms=50




